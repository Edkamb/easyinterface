module Test_Inference_d;

interface Object {
}

class Object implements Object {
}

interface C {
   C m();
   C n2(C c);
   C n3(C c);
   Fut<C> q(C a, C b);
}

class C implements C {
   C m(){
	C x = new cog C();
	return x;
   }
   C n2(C c){
	Fut<C> fut = c!m();
	return fut.get;
   }
   C n3(C c){
	Fut<C> fut = c!m();
	return fut.get;
   }
   Fut<C> q(C a, C b){
	Fut<C> fut2 = a!n2(b);
	C i1 = new cog C();
	C i2 = new cog C();
	Fut<C> fut3 = i1!n2(i2);
	return fut3;
   }
}


{
C i = new cog C();
C j = new cog C();
C k = new cog C();
Fut<C> fut4 = i!q(j,k);
}
